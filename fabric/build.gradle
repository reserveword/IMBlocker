plugins {
    id 'eclipse'
    id 'idea'
    id 'fabric-loom' version '1.8.+'
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }

}

base {
	archivesName = "${rootProject.name}-${mod_version}-fabric-1.19.4+"
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    modApi "com.terraformersmc:modmenu:${modmenu_version}"
    modApi "me.shedaniel.cloth:cloth-config-fabric:${clothconfig_version}" exclude group: "net.fabricmc.fabric-api"

    // REI API for Fabric
    modCompileOnlyApi "me.shedaniel:RoughlyEnoughItems-api-fabric:$rei_version"
    modCompileOnlyApi "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:$rei_version"
    modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:$rei_version"
    // compat
    modCompileOnlyApi "maven.modrinth:replaymod:$replaymod_version"
    modCompileOnlyApi "maven.modrinth:notebook:$notebook_version"
    modCompileOnly "curse.maven:ftblib-$ftblib_version"
    modLocalRuntime "maven.modrinth:voxelmap-updated:$voxelmap_version"
    modCompileOnlyApi "dev.emi:emi-fabric:$emi_version"
    modLocalRuntime "dev.emi:emi-fabric:$emi_version"
    compileOnly "io.github.spair:imgui-java-app:$imgui_version"
    compileOnly "maven.modrinth:sodium:mc1.19.4-0.4.10"
    compileOnly "maven.modrinth:reeses-sodium-options:mc1.19.4-1.6.3"
    compileOnly "maven.modrinth:create-fabric:0.5.1-j-build.1631+mc1.20.1"
    // modRuntimeOnly "curse.maven:ftbquest-$ftbquest_version"
    modCompileOnly "io.github.cottonmc:LibGui:$cottonlibgui_version"

    implementation project(':common')
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

project.jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
	
    from sourceSets.main.output
    from project(":common").sourceSets.main.output
}
